# -*- coding: utf-8 -*-
"""AI-Powered Code Summarizer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o3OR4VeCzokBLLmhDBl_dThg6i_3XQrR
"""

import os
import argparse
from rich.console import Console
from rich.panel import Panel
import openai

console = Console()

# Set your OpenAI API key as environment variable
openai.api_key = os.getenv("OPENAI_API_KEY")

def read_code_file(file_path):
    """Read the contents of a Python file."""
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"File {file_path} does not exist")
    with open(file_path, 'r', encoding='utf-8') as f:
        return f.read()

def summarize_code(code_text):
    """Generate a summary for the given Python code using OpenAI GPT."""
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "You are an expert Python developer."},
            {"role": "user", "content": f"Explain the following Python code:\n{code_text}"}
        ],
        max_tokens=300
    )
    summary = response.choices[0].message['content'].strip()
    return summary

def main(file_path):
    try:
        code_text = read_code_file(file_path)
        summary = summarize_code(code_text)
        console.print(Panel(summary, title=f"Summary for {file_path}"))
    except Exception as e:
        console.print(f"[red]Error:[/red] {str(e)}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="AI-Powered Python Code Summarizer")
    parser.add_argument("--file", required=True, help="Path to the Python file to summarize")
    args = parser.parse_args()
    main(args.file)